#!/bin/bash
# retreive_all_ec2
# Retrieve list of all our instances across all regions
# David Cook, Nov 3/2020
#
# Sample code found at:
# https://stackoverflow.com/questions/42086712/how-to-see-all-running-amazon-ec2-instances-across-all-regions
#
# This program will create a tabular list of all our AWS EC2 instances attached to the authorized
# account with ten (10) fields separated by colon (:) as a field separator.
# The fields are Type, Region, Availability Zone, InstanceID, InstanceName, InstanceType, Running status,
# VPC ID, Image ID and Private IP Address..
# An example of a record is as follows:
# EC2:us-west-2:us-west-2b:i-01f5314b991ee14f4:m5.large:running 
#
# These can be parsed with: cat $OUTFILE | awk 'BEGIN { FS=":" } {print $2}'
# With the awk $x value being
# $0 - the whole line   $4 - InstanceID          $8  - VPC ID
# $1 - EC2              $5 - InstanceName        $9  - Image ID
# $2 - Region           $6 - InstanceType        $10 - Priv IP Address
# $3 - Availability Zn  $7 - Running State 
#
# HISTORY
# VER 	DATE		WHO	STATUS
# v0.1	2020/11/03	dbc	Initial delivery
# v0.2  2020/11/06	dbc	Changed filter to get Key/Name pair subquery
#			 	with help from C Joslyn.
# v0.3	2020/11/17	dbc	Refactor common_functions module

# CONSTANTS/VARS
DEBUG=0                                          # 0=no / 1<=yes
VER=0.3						 # Script version number
OUTFILE="ec2-list-all_"`date +"%Y-%m-%d"`".txt"  # OUTFILE contains calculated runtime date
ReportDate=$(echo ${OUTFILE} | sed -e 's/^.*_//' -e 's/\.txt//')

#
# Include Common Functions
. ./common_functions


#
# PRIVATE FUNCTIONS
# Functions private to this application


#
# MAIN


# Log start of program
logger "${SCRIPTNAME} Starting"


# Check if I am the only instance of myself running
am-i-running


# Delete if present and re-create the output file
[ -f ${OUTFILE} ] && rm ${OUTFILE}
touch ${OUTFILE}
rc=$?
[ $rc -gt 0 ] && logger "`basename $0` cannot create ${OUTFILE}. Exiting..." && exit 8


# Retrieve all our instances
aws.get-all-instances


# Let's see what we got
if [ $DEBUG -gt 0 ]; then
   cat ${OUTFILE} | awk 'BEGIN { FS=":" } {print $2"  ++  " $3"  ++  " $4"  ++  "$5"  ++  "$6}'
fi


# Log completion
logger "${SCRIPTNAME} normal completion"


#
# EOF
#
