#!/bin/bash
# retreive_all_vpcs
# Retrieve list of all our VPC's across all regions
# David Cook, Nov 3/2020
#
# Sample code found at:
# https://stackoverflow.com/questions/42086712/how-to-see-all-running-amazon-ec2-instances-across-all-regions
#
# This program will create a tabular list of all our AWS EC2 instances attached to the authorized
# account with ten (10) fields separated by colon (:) as a field separator.
# The fields are Type, Region, Availability Zone, InstanceID, InstanceName, InstanceType, Running status,
# VPC ID, Image ID and Private IP Address..
# An example of a record is as follows:
# VPC:eu-west-2:vpc-xxxxxxxxxxxxxxfb7:10.68.0.0/20
#
# These can be parsed with: cat $OUTFILE | awk 'BEGIN { FS=":" } {print $2}'
# With the awk $x value being
# $0 - the whole line   $4 - CIDR Block
# $1 - VPC
# $2 - Region
# $3 - VpcId 
#
# HISTORY
# VER 	DATE		WHO	STATUS
# v0.1	2020/11/06	dbc	Initial delivery


# CONSTANTS/VARS
DEBUG=0                                          # 0=no / 1<=yes
VER=0.2						 # Script version number
OUTFILE="vpc-list-all_"`date +"%Y-%m-%d"`".txt"  # OUTFILE contains calculated runtime date
ReportDate=$(echo ${OUTFILE} | sed -e 's/^.*_//' -e 's/\.txt//')


#
# Include Common Functions
. ./common_functions


#
# PRIVATE FUNCTIONS
# Functions private to this application


#
# MAIN

# Log start of program
logger "${SCRIPTNAME} Starting"

#
# Check if I am already running
# Note 1: You must provide full path name to binaries to ensure this
#         works in cron environments.
# Note 2: Do not enclose if statement in brackets or it will
#         execute as a sub-shell and break process.
#if /usr/sbin/pidof -x "`basename $0`" -o $$ >/dev/null; then
# MacOS doesn't have pidof, use ps ax & grep
#if [ $(ps ax | grep -i `basename $0` | grep -v grep  | wc -l) -gt 2 ]; then
if [ $(/bin/ps ax | /usr/bin/grep -i `/usr/bin/basename $0` | /usr/bin/grep -v grep  | /usr/bin/wc -l) -gt 2 ]; then
    logger "`basename $0` already running. Exiting..."
    echo "Process already running"
    exit 8
fi


# Delete if present and re-create the output file
[ -f ${OUTFILE} ] && rm ${OUTFILE}
touch ${OUTFILE}
rc=$?
[ $rc -gt 0 ] && logger "`basename $0` cannot create ${OUTFILE}. Exiting..." && exit 8


# Retrieve all our instances
aws.get-all-vpcs


# Log completion
logger "${SCRIPTNAME} Normal completion"

#
# EOF
#
