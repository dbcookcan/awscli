#!/bin/bash
# updt_instances
#
# Updates the AWS instance list.
# Script parses your current AWS flat file from 
# retrieve_all_ec2 script and adds new/unseen values with a 
# timestamp to the instance table.
#
# TABLE: INSTANCES
#  id serial
#  InstId varchar(64) UNIQUE NOT NULL PRIMARY KEY
#  InstName varchar(64) 
#  InstType varchar(20)
#  VpcId  varchar(64)
#  Region varchar(20)
#  AvailZone varchar(20)
#  LocalIP varchar(20)
#  AMIId varchar(64)
#  RunStatus varchar(20)
#  ReportDate date
#  UpdtDate timestamp
# 
# HISTORY
# VER   DATE            WHO     STATUS
# v0.1  2020/11/03      dbc     Initial delivery
# v0.2  2020/12/02	dbc	Supress std error messages
#				Update SQL for compound PK on instance

# CONSTANTS/VARS
DEBUG=1                                          # 0=no / 1<=yes
VER=0.2                                          # Script version number
OUTFILE="ec2-list-all_"`date +"%Y-%m-%d"`".txt"  # OUTFILE contains calculated
						 # runtime date
ReportDate=$(echo ${OUTFILE} | sed -e 's/^.*_//' -e 's/\.txt//')
[ $DEBUG -gt 0 ] && echo "Report Date: "$ReportDate

#
# Include Common Functions
. ./common_functions


#
# PRIVATE FUNCTIONS
# Functions private to this application


#
# MAIN

# Log start of program
logger "${SCRIPTNAME} Starting"


# Check if I am already running
am-i-running


# Does the source file exist?
[ ! -f ${OUTFILE} ] && echo "${OUTFILE} not present. Exiting." && exit 9


# Get list if unique machine types
LIST=$(cat ${OUTFILE})


# Loop through array and add new items to the database
for ITEM in $LIST
do
  REGION=$(echo ${ITEM} | awk 'BEGIN {FS=":"}{print $2}')
  AZ=$(echo ${ITEM} | awk 'BEGIN {FS=":"}{print $3}')
  INSTID=$(echo ${ITEM} | awk 'BEGIN {FS=":"}{print $4}')
  INSTNM=$(echo ${ITEM} | awk 'BEGIN {FS=":"}{print $5}')
  INSTTY=$(echo ${ITEM} | awk 'BEGIN {FS=":"}{print $6}')
  RUNSTAT=$(echo ${ITEM} | awk 'BEGIN {FS=":"}{print $7}')
  VPCID=$(echo ${ITEM} | awk 'BEGIN {FS=":"}{print $8}')
  AMIID=$(echo ${ITEM} | awk 'BEGIN {FS=":"}{print $9}')
  IPADDR=$(echo ${ITEM} | awk 'BEGIN {FS=":"}{print $10}')


  if [ $DEBUG -gt 0 ]; then
     echo "REGION     ---> "$REGION
     echo "AZ         ---> "$AZ
     echo "INST NAME  ---> "$INSTNM
     echo "INST ID    ---> "$INSTID
     echo "INST TYPE  ---> "$INSTTY
     echo "RUN STAT   ---> "$RUNSTAT
     echo "VPC ID     ---> "$VPCID
     echo "AMI ID     ---> "$AMIID
     echo "IP ADDR    ---> "$IPADDR
  fi


  # Perform insert
  psql -d ${DB} -c "INSERT into INSTANCE (InstId, InstName, InstType, VpcId, Region, AvailZone, LocalIP, AMIId, RunStatus, ReportDate, UpdtDate) SELECT '$INSTID', '$INSTNM', '$INSTTY', '$VPCID', '$REGION', '$AZ', '$IPADDR', '$AMIID', '$RUNSTAT','$ReportDate', now() WHERE NOT EXISTS ( SELECT 1 from INSTANCE WHERE InstId='$INSTID' and ReportDate='$ReportDate');" 2>/dev/null
done

# InstId
# InstName
# VpcId
# Region
# AvailZone
# LocalIP
# AMIId
# RunStatus

logger "${SCRIPTNAME} Normal completion"

#
# EOF
#
