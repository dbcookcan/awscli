#!/bin/bash
# updt_regions
#
# Updates the AWS Region list.
# Script parses your current AWS flat file from 
# retrieve_all_regions script and adds new/unseen values with a 
# timestamp to the region table.
#
# TABLE: Region
#  id serial
#  RegionName varchar(20) UNIQUE NOT NULL PRIMARY KEY
#  UpdtDate timestamp
# 
# HISTORY
# VER   DATE            WHO     STATUS
# v0.1  2020/11/03      dbc     Initial delivery


# CONSTANTS/VARS
DEBUG=0                                          # 0=no / 1<=yes
VER=0.2                                          # Script version number
CREATE_TABLE=0
OUTFILE="region-list_"`date +"%Y-%m-%d"`".txt"   # OUTFILE contains calculated runtime date


#
# Include Common Functions
. ./common_functions


#
# PRIVATE FUNCTIONS
# Functions private to this application


#
# MAIN


# Log start of program
logger "${SCRIPTNAME} Starting"

# Check if I am already running
am-i-running


# Create the table
if [ ${CREATE_TABLE} -gt 0 ]; then
   psql -d ${DB} -c "CREATE TABLE RegionName(id SERIAL, Region varchar(20) UNIQUE NOT NULL PRIMARY KEY, UpdtDate timestamp)"
   psql -d ${DB} -c "SELECT count(*) from RegionName;"
   exit
fi


# Does the source file exist?
[ ! -f ${OUTFILE} ] && echo "${OUTFILE} not present. Exiting." && exit 9

# Get list if unique machine types
LIST=$(cat ${OUTFILE} | awk 'BEGIN { FS=":" } {print $2}')


# Loop through array and add new items to the database
for ITEM in $LIST
do
  echo "---> "$ITEM
  psql -d ${DB} -c "INSERT into RegionName (Region,UpdtDate) SELECT '$ITEM', now() WHERE NOT EXISTS ( SELECT 1 from RegionName WHERE Region='$ITEM');"
done

logger "${SCRIPTNAME} Normal completion"

#
# EOF
#
